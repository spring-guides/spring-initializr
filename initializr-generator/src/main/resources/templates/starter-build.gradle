buildscript {
	ext {
		{{#buildPropertiesGradle}}
		{{key}} = '{{value}}'
		{{/buildPropertiesGradle}}
		asciidoctorVersion = '1.5.3'
	}
	repositories {
		maven { url "http://oemut03.mpifix.com:8081/nexus/content/groups/public/" }
		maven { url "https://plugins.gradle.org/m2" }
		mavenCentral()
		{{^isRelease}}
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		{{/isRelease}}
	}
	dependencies {
		classpath("com.identifix:identifix-project:+")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.asciidoctor:asciidoctor-gradle-plugin:${asciidoctorVersion}")
		{{^bootOneThreeAvailable}}
		classpath('io.spring.gradle:dependency-management-plugin:{{dependencyManagementPluginVersion}}')
		{{/bootOneThreeAvailable}}
		{{#kotlin}}
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		{{/kotlin}}
	}
}

apply plugin: '{{language}}'
{{#kotlin}}
apply plugin: 'kotlin-spring'
{{/kotlin}}
{{#war}}
apply plugin: 'eclipse-wtp'
{{/war}}
{{^war}}
apply plugin: 'eclipse'
{{/war}}
apply plugin: '{{springBootPluginName}}'
{{^bootOneThreeAvailable}}
apply plugin: 'io.spring.dependency-management'
{{/bootOneThreeAvailable}}
{{#bootTwoZeroAvailable}}
apply plugin: 'io.spring.dependency-management'
{{/bootTwoZeroAvailable}}
{{#war}}
apply plugin: 'war'
{{/war}}
apply plugin: 'com.identifix.identifix-project'
apply plugin: 'org.asciidoctor.convert'

group = '{{groupId}}'
version = '{{version}}'
sourceCompatibility = {{javaVersion}}{{#kotlin}}
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]{{#java8OrLater}}
		jvmTarget = "1.8"{{/java8OrLater}}
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]{{#java8OrLater}}
		jvmTarget = "1.8"{{/java8OrLater}}
	}
}{{/kotlin}}

repositories {
	maven { url "http://oemut03.mpifix.com:8081/nexus/content/groups/public/" }
	mavenCentral()
	{{#repositoryValues}}
	maven { url "{{value.url}}" }
	{{/repositoryValues}}
}

{{#providedDependencies}}
configurations {
	providedRuntime
}
{{/providedDependencies}}

ext {
	{{#buildPropertiesVersions}}
	{{key}} = '{{value}}'
{{/buildPropertiesVersions}}
	spockVersion = '1.1-groovy-2.4'
	springRestDocsVersion = '2.0.0.RELEASE'
}

dependencies {
	asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:${springRestDocsVersion}"
	{{#compileDependencies}}
	compile('{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}')
	{{/compileDependencies}}
	{{#groovy}}
	compile('org.codehaus.groovy:groovy')
	{{/groovy}}
	{{#kotlin}}
	compile("org.jetbrains.kotlin:{{kotlinStdlibArtifactId}}{{^kotlinSupport}}:${kotlinVersion}{{/kotlinSupport}}")
	compile("org.jetbrains.kotlin:kotlin-reflect{{^kotlinSupport}}:${kotlinVersion}{{/kotlinSupport}}")
	{{/kotlin}}
	{{#runtimeDependencies}}
	runtime('{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}')
	{{/runtimeDependencies}}
	{{#compileOnlyDependencies}}
	compileOnly('{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}')
	{{/compileOnlyDependencies}}
	{{#providedDependencies}}
	providedRuntime('{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}')
	{{/providedDependencies}}
	testCompile('org.springframework.boot:spring-boot-starter-test')
	{{#testDependencies}}
	testCompile('{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}')
	{{/testDependencies}}
	testCompile "org.spockframework:spock-spring:${spockVersion}"
    testCompile "org.spockframework:spock-core:${spockVersion}"
}
{{#hasBoms}}

dependencyManagement {
	imports {
		{{#reversedBoms}}
		mavenBom "{{groupId}}:{{artifactId}}:{{versionToken}}"
		{{/reversedBoms}}
	}
}
{{/hasBoms}}

asciidoctor {
    outputDir "$buildDir/resources/main/public"
	dependsOn test
}

	bootJar {
		dependsOn { asciidoctor }
	}
