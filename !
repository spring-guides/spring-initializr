/*
 * Copyright 2012-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.spring.initializr.validators;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 * Custom validator for Maven Attributes.
 *
 * @author Govinda Sakhare
 */
@Component
public class MavenParameterValidator {

	private static final Logger log = LoggerFactory
			.getLogger(MavenParameterValidator.class);

	/**
	 * Validator for groupid. Checks to ensure that groupid does not start with numberic
	 * values and does not contains special characters apart from dot and hyphen
	 *
	 * @author Govinda Sakhare
	 */
	@Component
	class GroupIdValidator implements ConstraintValidator<GroupId, String> {

		@Autowired
		public GroupIdValidator() {

		}

		@Override
		public void initialize(GroupId groupId) {
		}

		@Override
		public boolean isValid(String groupId, ConstraintValidatorContext context) {
			if (groupId == null || groupId.isEmpty()) {
				log.info("Group ID field is empty!");
				return false;
			}
			// checking whether
			else if (Character.isDigit(groupId.charAt(0))) {
				log.info("groupId starts with the numberic value!");
				return true;
			}
			else if (groupId.matches("[a-zA-Z0-9_.]]")) {
				return true;
			}
			return false;
		}

	}

}
