buildscript {
    ext {
        springBootVersion = '${bootVersion}'
    }
    repositories {
        mavenCentral()<% if (!bootVersion.contains("RELEASE")) { %>
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
<% } %>
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:\${springBootVersion}")
    }
}

apply plugin: '${language}'<% if (packaging=='war') {  %>
apply plugin: 'eclipse-wtp'<% } else { %>
apply plugin: 'eclipse'<% } %>
apply plugin: 'idea'
apply plugin: 'spring-boot' <% if (packaging=='war') {  %>
apply plugin: 'war'
<% } %>

<% if (packaging=='war') {  %>war<% } else { %>jar<% } %> {
    baseName = '${artifactId}'
    version = '${version}'
}
sourceCompatibility = ${javaVersion}
targetCompatibility = ${javaVersion}

repositories {
    mavenCentral()<% if (!bootVersion.contains("RELEASE")) { %>
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
<% } %>
}

<% if (packaging=='war') { %>configurations {
    providedRuntime
}
<% } %>
dependencies {<% dependencies.findAll{it.hasSpringBootStarter}.each { %>
    compile("${it.groupId}:${it.artifactId}")<% } %><% if (language=='groovy') { %>
    compile("org.codehaus.groovy:groovy")<% } %><% if (packaging=='war') { %>
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")<% } %>
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-${javaVersion}'
    }
}

<% if (facets.contains('rave')) {%>task clientInstall(type:Exec) {
	logging.captureStandardOutput LogLevel.INFO
	logging.captureStandardError LogLevel.LIFECYCLE
	workingDir './src/main/resources/static'
	commandLine 'npm', 'install'
}

build.dependsOn clientInstall<% } %>

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
